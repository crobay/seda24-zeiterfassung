"""Add category field to users

Revision ID: 35492a576030
Revises: 14c5751f84d1
Create Date: 2025-08-30 11:27:38.506776

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '35492a576030'
down_revision: Union[str, None] = '14c5751f84d1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_quick_bookings_id', table_name='quick_bookings')
    op.drop_table('quick_bookings')
    op.add_column('break_entries', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.alter_column('break_entries', 'start_time',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_column('break_entries', 'break_type')
    op.drop_index('ix_customers_name', table_name='customers')
    op.create_index(op.f('ix_customers_name'), 'customers', ['name'], unique=True)
    op.drop_column('customers', 'address')
    op.add_column('employee_object_hours', sa.Column('tracking_mode', sa.String(length=1), nullable=True))
    op.drop_column('employees', 'monthly_amount')
    op.drop_column('employees', 'tracking_mode')
    op.drop_column('objects', 'radius_meters')
    op.create_index(op.f('ix_schedules_id'), 'schedules', ['id'], unique=False)
    op.alter_column('time_entries', 'check_in',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('time_entries', 'notes',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=True)
    op.drop_column('time_entries', 'check_out_lat')
    op.drop_column('time_entries', 'check_out_lng')
    op.drop_column('time_entries', 'check_in_lng')
    op.drop_column('time_entries', 'check_in_lat')
    op.add_column('users', sa.Column('category', sa.String(), nullable=True))
    op.add_column('warnings', sa.Column('description', sa.Text(), nullable=True))
    op.add_column('warnings', sa.Column('resolved_by', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'warnings', 'users', ['resolved_by'], ['id'])
    op.drop_column('warnings', 'message')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('warnings', sa.Column('message', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'warnings', type_='foreignkey')
    op.drop_column('warnings', 'resolved_by')
    op.drop_column('warnings', 'description')
    op.drop_column('users', 'category')
    op.add_column('time_entries', sa.Column('check_in_lat', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('time_entries', sa.Column('check_in_lng', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('time_entries', sa.Column('check_out_lng', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('time_entries', sa.Column('check_out_lat', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.alter_column('time_entries', 'notes',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('time_entries', 'check_in',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_index(op.f('ix_schedules_id'), table_name='schedules')
    op.add_column('objects', sa.Column('radius_meters', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('employees', sa.Column('tracking_mode', sa.VARCHAR(length=1), server_default=sa.text("'C'::character varying"), autoincrement=False, nullable=True))
    op.add_column('employees', sa.Column('monthly_amount', sa.DOUBLE_PRECISION(precision=53), server_default=sa.text('556.00'), autoincrement=False, nullable=True))
    op.drop_column('employee_object_hours', 'tracking_mode')
    op.add_column('customers', sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_customers_name'), table_name='customers')
    op.create_index('ix_customers_name', 'customers', ['name'], unique=False)
    op.add_column('break_entries', sa.Column('break_type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.alter_column('break_entries', 'start_time',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_column('break_entries', 'created_at')
    op.create_table('quick_bookings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('employee_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('object_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('booking_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('scheduled_hours', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('booked_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['booked_by'], ['users.id'], name='quick_bookings_booked_by_fkey'),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name='quick_bookings_employee_id_fkey'),
    sa.ForeignKeyConstraint(['object_id'], ['objects.id'], name='quick_bookings_object_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='quick_bookings_pkey')
    )
    op.create_index('ix_quick_bookings_id', 'quick_bookings', ['id'], unique=False)
    # ### end Alembic commands ###
